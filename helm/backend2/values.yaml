accountDomain:
adminDomain:
# Websites that require manual certs
websitesManual: []
# - domain: *.pleio.nl
#   secretName: tls-wildcard.pleio.nl
websitesAuto: []
# - domain: www.pleio-extra.nl
#   secretName: tls-pleio-extra.nl

env: test
debug: 'False'
cspReportOnly: 'True'

frontend:
  repository: registry.gitlab.com/pleio/frontend
  tag: latest
  pullPolicy: Always

admin:
  replicaCount: 1
  resources: {}

api:
  replicaCount: 1
  resources: {}

background:
  worker:
    replicaCount: 1
    resources: {}
  scheduler:
    resources: {}

image:
  repository: registry.gitlab.com/pleio/backend2
  tag: latest
  pullPolicy: IfNotPresent

tunnel:
  repository: docker.io/cloudflare/cloudflared
  tag: 2020.7.1
  hostname:
  secretname: pleio-beheer.nl

storage:
  # one of "pvc", "hostpath"
  type: pvc
  className: efs
  dataSize: 1Mi
  tmpSize: 1Mi
  backupSize: 1Mi
  existingTempStorage:
  existingDataStorage:
  existingBackupStorage:

cleanup:
  # The schedule for which the clean job will be run
  schedule: '0 2 * * *' # every day at 2 in the morning
  # The maximum amount of days, a file will exist in the tmp folder
  maxFileAge: 2

ingress:
  # ingress annotations that will be applied to all ingresses
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 2050m
    nginx.ingress.kubernetes.io/modsecurity-snippet: |
      SecRuleEngine On
      SecRule REQUEST_URI "@beginsWith /graphql" "id:1,ctl:ruleEngine=Off"
      SecRule REQUEST_URI "@beginsWith /superadmin" "id:2,ctl:ruleEngine=Off"
      SecRuleRemoveById 950000-959999
  # extra annotations for the ingress with manual certificates
  # cannot contain from-to-www-redirect since it does not work for wildcards
  manualAnnotations:
  # extra annotations for the ingress with auto certificates
  autoAnnotations:
    cert-manager.io/cluster-issuer: letsencrypt-pleio-prod-issuer

memcached:
  persistence:
    enabled: false

collab:
  backend:
