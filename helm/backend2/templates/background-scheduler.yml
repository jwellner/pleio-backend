{{ $labelData := dict "Values" .Values "Release" .Release "Chart" .Chart "Component" "background-scheduler" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "backend2.backgroundSchedulerName" . }}
  labels:
    {{- include "backend2.labels" $labelData | nindent 4 }}
spec:
  replicas: 1 # Avoid duplicate tasks and never use more than 1 scheduler
  selector:
    matchLabels:
      {{- include "backend2.selectorLabels" $labelData | nindent 6 }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      name: {{ include "backend2.backgroundSchedulerName" . }}
      labels:
        {{- include "backend2.selectorLabels" $labelData | nindent 8 }}
        environment: {{ .Values.env }}
    spec:
      containers:
        - name: {{ include "backend2.backgroundSchedulerName" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - celery
            - -A
            - backend2.celery
            - beat
            - -s
            - /app-data/celerybeat-schedule
            - --loglevel=info
          volumeMounts:
            - mountPath: /app-data
              name: pleio-data
          envFrom:
            - configMapRef:
                name: {{ include "backend2.name" . }}
            - secretRef:
                name: {{ include "backend2.secretsName" . }}
          resources:
            {{- toYaml .Values.background.scheduler.resources | nindent 12 }}
      volumes:
        - name: pleio-data
          {{- if eq .Values.storage.type "hostpath" }}
          hostPath:
            path: {{ .Values.storage.existingDataStorage }}
          {{- else }}
          persistentVolumeClaim:
            claimName: {{ include "backend2.dataStorageName" . }}
          {{- end }}
