{{ $labelData := dict "Values" .Values "Release" .Release "Chart" .Chart "Component" "api" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "backend2.apiName" . }}
  labels:
    {{- include "backend2.labels" $labelData | nindent 4 }}
spec:
  replicas: {{ .Values.api.replicaCount }}
  selector:
    matchLabels:
      {{- include "backend2.selectorLabels" $labelData | nindent 6 }}
  strategy:
    rollingUpdate:
      maxSurge: {{ add .Values.api.replicaCount 1 }}
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      name: {{ include "backend2.apiName" . }}
      labels:
        {{- include "backend2.selectorLabels" $labelData | nindent 8 }}
    spec:
      initContainers:
      - name: {{ include "backend2.frontendName" . }}
        image: "{{ .Values.frontend.repository }}:{{ .Values.frontend.tag }}"
        imagePullPolicy: {{ .Values.frontend.pullPolicy }}
        command:
          - cp
          - -R
          - /usr/share/nginx/html/.
          - /frontend
        volumeMounts:
          - mountPath: /frontend
            name: frontend
      containers:
        - name: {{ include "backend2.apiName" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /start.sh
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          volumeMounts:
            - mountPath: /tmp
              name: tmp-zip-storage
            - mountPath: /app-data
              name: pleio-data
            - mountPath: /app/static-frontend
              name: frontend
          envFrom:
            - configMapRef:
                name: {{ include "backend2.name" . }}
            - secretRef:
                name: {{ include "backend2.secretsName" . }}
      volumes:
        - name: tmp-zip-storage
          persistentVolumeClaim:
            claimName: {{ include "backend2.tempStorageName" . }}
        - name: pleio-data
          persistentVolumeClaim:
            claimName: {{ include "backend2.dataStorageName" . }}
        - name: frontend
          emptyDir: {}
