{{ $labelData := dict "Values" .Values "Release" .Release "Chart" .Chart "Component" "background-worker" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "backend2.backgroundWorkerName" . }}
  labels:
    {{- include "backend2.labels" $labelData | nindent 4 }}
spec:
  replicas: {{ .Values.background.replicaCount }}
  selector:
    matchLabels:
      {{- include "backend2.selectorLabels" $labelData | nindent 6 }}
  strategy:
    rollingUpdate:
      maxSurge: {{ add .Values.background.replicaCount 1 }}
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      name: {{ include "backend2.backgroundWorkerName" . }}
      labels:
        {{- include "backend2.selectorLabels" $labelData | nindent 8 }}
    spec:
      containers:
        - name: {{ include "backend2.backgroundWorkerName" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - celery
            - -A
            - backend2.celery
            - worker
            - -E
            - -O
            - fair
            - -s
            - /app-data/celerybeat-schedule
            - --loglevel=info
          volumeMounts:
            - mountPath: /tmp
              name: tmp-zip-storage
            - mountPath: /app-data
              name: pleio-data
            - mountPath: /backup-storage
              name: backup-storage
          envFrom:
            - configMapRef:
                name: {{ include "backend2.name" . }}
            - secretRef:
                name: {{ include "backend2.secretsName" . }}
          env:
            - name: DB_HOST_REPLICA
              value: ""
      volumes:
        - name: tmp-zip-storage
          {{- if eq .Values.storage.type "hostpath"}}
          hostPath:
            path: {{ .Values.storage.existingTempStorage }}
          {{- else }}
          persistentVolumeClaim:
            claimName: {{ include "backend2.tempStorageName" . }}
          {{- end }}
        - name: pleio-data
          {{- if eq .Values.storage.type "hostpath" }}
          hostPath:
            path: {{ .Values.storage.existingDataStorage }}
          {{- else }}
          persistentVolumeClaim:
            claimName: {{ include "backend2.dataStorageName" . }}
          {{- end }}
        - name: backup-storage
          {{- if eq .Values.storage.type "hostpath" }}
          hostPath:
            path: {{ .Values.storage.existingBackupStorage }}
          {{- else }}
          persistentVolumeClaim:
            claimName: {{ include "backend2.backupStorageName" . }}
          {{- end }}
