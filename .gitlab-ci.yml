image: python:3.8

stages:
  - test
  - build
  - deploy

variables:
  SECRET_KEY: bg9kU6ckKXTLQeZxtovc
  POSTGRES_PASSWORD: postgres
  DB_HOST: postgres
  DB_USER: postgres
  DB_PASSWORD: postgres
  DB_NAME: postgres
  ENV: test
  DEBUG: "True"
  PIP_CACHE_DIR: $CI_PROJECT_DIR/.cache/pip
  ELASTICSEARCH_URL: http://elasticsearch:9200
  ELASTICSEARCH_HOST: http://elasticsearch:9200
  CELERY_TASK_ALWAYS_EAGER: "True"

cache:
  paths:
  - $PIP_CACHE_DIR

before_script:

services:
  - postgres:9.6-alpine
  - name: docker.elastic.co/elasticsearch/elasticsearch:7.4.0
    alias: elasticsearch
    command: [ "bin/elasticsearch", "-Expack.security.enabled=false", "-Ediscovery.type=single-node" ]


prospector:
  stage: test
  tags:
    - docker
  script:
    - pip3 install -r requirements.txt
    - prospector

test:
  stage: test
  tags:
    - docker
  script:
    - curl "http://elasticsearch:9200/_cat/health"
    - pip install -r requirements.txt
    - mkdir -p static static-frontend
    - touch static-frontend/web.css static-frontend/vendor.js static-frontend/web.js
    - python manage.py collectstatic --noinput
    - coverage run --source='.' manage.py test
    - coverage report

scan:
  stage: test
  tags:
    - shell
  script:
    - docker build -t registry.gitlab.com/pleio/backend2:${CI_COMMIT_SHA:0:8} .
    - scan.sh registry.gitlab.com/pleio/backend2:${CI_COMMIT_SHA:0:8}

build:
  stage: build
  tags:
    - shell
  only:
    - dev
    - master
  script:
    - docker build -t registry.gitlab.com/pleio/backend2:${CI_COMMIT_SHA:0:8} .
    - docker build -t registry.gitlab.com/pleio/backend2:latest .
    - scan.sh registry.gitlab.com/pleio/backend2:${CI_COMMIT_SHA:0:8}
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker push registry.gitlab.com/pleio/backend2:${CI_COMMIT_SHA:0:8}
    - docker push registry.gitlab.com/pleio/backend2:latest

build-feature:
  stage: build
  only:
    - /^feature-(.*)$/
  tags:
    - shell
  script:
    - docker build -t registry.gitlab.com/pleio/backend2:feature-${CI_COMMIT_SHA:0:8} .
    - scan.sh registry.gitlab.com/pleio/backend2:feature-${CI_COMMIT_SHA:0:8}
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker push registry.gitlab.com/pleio/backend2:feature-${CI_COMMIT_SHA:0:8}

.helm_deploy:
  stage: deploy
  script:
    - FRONTEND_TAG=$(kubectl get  -n pleio2 deployment ${HELM_NAME}-api -o=jsonpath='{.spec.template.spec.initContainers[0].image}' | grep -oP '(?<=:).+')
    - helm dependency update helm/backend2
    - |
      helm upgrade --install -n pleio2 -f ${HELM_VALUES_FILE} \
        --set image.tag=${TAG_PREFIX}${CI_COMMIT_SHA:0:8} \
        --set frontend.tag=${FRONTEND_TAG} \
        ${HELM_NAME} helm/backend2

AWS Review:
  tags:
    - control-aws
  only:
    - /^feature-(.*)$/
  variables:
    HELM_NAME: backend2-review
    HELM_VALUES_FILE: helm/backend2/values.aws.review.yaml
    TAG_PREFIX: feature-
  extends:
    - .helm_deploy

AWS Test (helm):
  tags:
    - control-aws
  only:
    - dev
  variables:
    HELM_NAME: backend2-test
    HELM_VALUES_FILE: helm/backend2/values.aws.test.yaml
  extends:
    - .helm_deploy

ODCN Test (helm):
  tags:
    - control-odc
  only:
    - dev
  variables:
    HELM_NAME: backend2-test
    HELM_VALUES_FILE: helm/backend2/values.odcn.test.yaml
  extends:
    - .helm_deploy

ODCN Test:
  stage: deploy
  tags:
    - control-odc
  only:
    - dev
  script:
    - /snap/bin/kubectl --kubeconfig ~/.kube/config-odcn -n pleio2 set image deployment/api-test api-test=registry.gitlab.com/pleio/backend2:${CI_COMMIT_SHA:0:8}
    - /snap/bin/kubectl --kubeconfig ~/.kube/config-odcn -n pleio2 set image deployment/admin-test admin-test=registry.gitlab.com/pleio/backend2:${CI_COMMIT_SHA:0:8}
    - /snap/bin/kubectl --kubeconfig ~/.kube/config-odcn -n pleio2 set image deployment/background-test background-test=registry.gitlab.com/pleio/backend2:${CI_COMMIT_SHA:0:8}
    - sleep 30
    - /snap/bin/kubectl --kubeconfig ~/.kube/config-odcn -n pleio2 patch deployment memcache-test -p "{\"spec\":{\"template\":{\"metadata\":{\"labels\":{\"date\":\"`date +'%s'`\"}}}}}"

AWS Prod:
  stage: deploy
  tags:
    - control-aws
  only:
    - master
  when: manual
  script:
    - /usr/local/bin/kubectl -n pleio2 set image deployment/api api=registry.gitlab.com/pleio/backend2:${CI_COMMIT_SHA:0:8}
    - /usr/local/bin/kubectl -n pleio2 set image deployment/admin admin=registry.gitlab.com/pleio/backend2:${CI_COMMIT_SHA:0:8}
    - /usr/local/bin/kubectl -n pleio2 set image deployment/background background=registry.gitlab.com/pleio/backend2:${CI_COMMIT_SHA:0:8}

AWS Prod (helm):
  tags:
    - control-aws
  only:
    - master
  when: manual
  variables:
    HELM_NAME: backend2
    HELM_VALUES_FILE: helm/backend2/values.aws.prod.yaml
  extends:
    - .helm_deploy

ODCN Prod:
  stage: deploy
  tags:
    - control-odc
  only:
    - master
  when: manual
  script:
    - /snap/bin/kubectl --kubeconfig ~/.kube/config-odcn -n pleio2 set image deployment/api api=registry.gitlab.com/pleio/backend2:${CI_COMMIT_SHA:0:8}
    - /snap/bin/kubectl --kubeconfig ~/.kube/config-odcn -n pleio2 set image deployment/admin admin=registry.gitlab.com/pleio/backend2:${CI_COMMIT_SHA:0:8}
    - /snap/bin/kubectl --kubeconfig ~/.kube/config-odcn -n pleio2 set image deployment/background background=registry.gitlab.com/pleio/backend2:${CI_COMMIT_SHA:0:8}

ODCN Prod (helm):
  tags:
    - control-odc
  only:
    - master
  when: manual
  variables:
    HELM_NAME: backend2
    HELM_VALUES_FILE: helm/backend2/values.odcn.prod.yaml
  extends:
    - .helm_deploy
