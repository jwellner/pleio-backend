stages:
  - test
  - build
  - deploy

variables:
  PIP_CACHE_DIR: $CI_PROJECT_DIR/.cache/pip

cache:
  paths:
  - $PIP_CACHE_DIR

before_script:

prospector:
  image: python:3.9
  stage: test
  tags:
    - docker
  script:
    - pip3 install -r requirements.txt
    - prospector

test:
  stage: test
  coverage: '/TOTAL.*\s+(\d+%)/'
  tags:
    - shell
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker-compose -p backend2-test-${CI_COMMIT_SHA:0:8} -f docker-compose.test.yml build
    - docker-compose -p backend2-test-${CI_COMMIT_SHA:0:8} -f docker-compose.test.yml run api /ci-test.sh
    - docker-compose -p backend2-test-${CI_COMMIT_SHA:0:8} -f docker-compose.test.yml down -v

scan:
  stage: test
  tags:
    - shell
  script:
    - docker build -t registry.gitlab.com/pleio/backend2:${CI_COMMIT_SHA:0:8} .
    - scan.sh registry.gitlab.com/pleio/backend2:${CI_COMMIT_SHA:0:8}

build:
  stage: build
  tags:
    - shell
  only:
    - dev
    - master
  script:
    - docker build -t registry.gitlab.com/pleio/backend2:${CI_COMMIT_SHA:0:8} .
    - docker build -t registry.gitlab.com/pleio/backend2:latest .
    - scan.sh registry.gitlab.com/pleio/backend2:${CI_COMMIT_SHA:0:8}
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker push registry.gitlab.com/pleio/backend2:${CI_COMMIT_SHA:0:8}
    - docker push registry.gitlab.com/pleio/backend2:latest

build-feature:
  stage: build
  only:
    - /^feature-(.*)$/
  tags:
    - shell
  script:
    - docker build -t registry.gitlab.com/pleio/backend2:feature-${CI_COMMIT_SHA:0:8} .
    - scan.sh registry.gitlab.com/pleio/backend2:feature-${CI_COMMIT_SHA:0:8}
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker push registry.gitlab.com/pleio/backend2:feature-${CI_COMMIT_SHA:0:8}

.helm_deploy:
  stage: deploy
  script:
    - FRONTEND_TAG=$(kubectl get  -n pleio2 deployment ${HELM_NAME}-api -o=jsonpath='{.spec.template.spec.initContainers[0].image}' | grep -oP '(?<=:).+')
    - helm dependency update helm/backend2
    - |
      helm upgrade --install -n pleio2 -f ${HELM_VALUES_FILE} \
        --set image.tag=${TAG_PREFIX}${CI_COMMIT_SHA:0:8} \
        --set frontend.tag=${FRONTEND_TAG} \
        ${HELM_NAME} helm/backend2

ODCN Review:
  tags:
    - control-odc
  only:
    - /^feature-(.*)$/
  variables:
    HELM_NAME: backend2-review
    HELM_VALUES_FILE: helm/backend2/values.odcn.review.yaml
    TAG_PREFIX: feature-
  extends:
    - .helm_deploy

ODCN Test:
  tags:
    - control-odc
  only:
    - dev
  variables:
    HELM_NAME: backend2-test
    HELM_VALUES_FILE: helm/backend2/values.odcn.test.yaml
  extends:
    - .helm_deploy

ODCN Prod:
  tags:
    - control-odc
  only:
    - master
  when: manual
  variables:
    HELM_NAME: backend2
    HELM_VALUES_FILE: helm/backend2/values.odcn.prod.yaml
  extends:
    - .helm_deploy
