input deleteUserInput {
  guid: String!
}

input toggleUserIsAdminInput {
  guid: String!
}

type deleteUserPayload {
  success: Boolean
}

type toggleUserIsAdminPayload {
  success: Boolean
}

type SiteUserList {
  total: Int!
  edges: [User]
}

extend type Mutation {
  deleteUser(input: deleteUserInput!): deleteUserPayload
  toggleUserIsAdmin(input: toggleUserIsAdminInput!): toggleUserIsAdminPayload
  addSiteSettingProfileField(input: addSiteSettingProfileFieldInput!): addSiteSettingProfileFieldPayload
  editSiteSettingProfileField(input: editSiteSettingProfileFieldInput!): editSiteSettingProfileFieldPayload
}

extend type Query {
  siteUsers(q: String, offset: Int, limit: Int, isAdmin: Boolean, isDeleteRequested: Boolean): SiteUserList
}

extend type User {
  isAdmin: Boolean
}


input addSiteSettingProfileFieldInput {
  key: String!
  name: String!
  category: String
  isEditable: Boolean
  isFilter: Boolean
  isInOverview: Boolean
  fieldType: String!
  fieldOptions: [String]
  isInOnboarding: Boolean
  isMandatory: Boolean
  isHidden: Boolean
}

type addSiteSettingProfileFieldPayload {
  profileItem: ProfileItem
}

input editSiteSettingProfileFieldInput {
  key: String!
  name: String
  category: String
  isEditable: Boolean
  isFilter: Boolean
  isInOverview: Boolean
  fieldType: String
  fieldOptions: [String]
  isInOnboarding: Boolean
  isMandatory: Boolean
  isHidden: Boolean
}

type editSiteSettingProfileFieldPayload {
  profileItem: ProfileItem
}

extend type ProfileItem {
  isInOnboarding: Boolean
  isMandatory: Boolean
  isHidden: Boolean
}

type ExportableField {
  field_type: String!
  field: String!
  label: String!
}

extend type SiteSettings {
  exportableUserFields: [ExportableField]
}