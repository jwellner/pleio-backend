version: '3'

services:

  api:
    build: .
    restart: on-failure
    environment:
      DEBUG: 'True'
      CELERY_BROKER_URL: 'amqp://rabbitmq'
      CELERY_RESULT_BACKEND: 'redis://redis:6379/0'
      MEMCACHE_HOST_PORT: memcached:11211
      CLAMAV_HOST: clamav
    env_file:
      - ./.env
    stdin_open: true
    tty: true
    command: ["/start-dev.sh"]
    volumes:
      - .:/app
      - frontend-build:/app/static-frontend
      - shared-tmp:/tmp
    ports:
      - "8000:8000"
    depends_on:
      - db
      - frontend
      - admin
      - rabbitmq

  background:
    build: .
    restart: on-failure
    environment:
      CELERY_BROKER_URL: 'amqp://rabbitmq'
      CELERY_RESULT_BACKEND: 'redis://redis:6379/0'
      MEMCACHE_HOST_PORT: memcached:11211
      CLAMAV_HOST: clamav
    env_file:
      - ./.env
    stdin_open: true
    command: ["/start-background.sh"]
    volumes:
      - .:/app
      - shared-tmp:/tmp
    depends_on:
      - db
      - rabbitmq

  frontend:
    image: registry.gitlab.com/pleio/frontend:latest
    volumes:
      - frontend-build:/shared
    command: bash -c "cp -Rp /usr/share/nginx/html/. /shared && chown -R www-data:www-data /shared"
  admin:
    build: .
    restart: on-failure
    environment:
      RUN_AS_ADMIN_APP: 'True'
      CELERY_BROKER_URL: 'amqp://rabbitmq'
      CELERY_RESULT_BACKEND: 'redis://redis:6379/0'
    env_file:
      - ./.env
    stdin_open: true
    tty: true
    command: ["/start-admin-dev.sh"]
    volumes:
      - .:/app
    depends_on:
      - db
    ports:
      - "8888:8000"

  db:
    image: postgres:12
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "15432:5432"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.2
    environment:
      - bootstrap.memory_lock=true
      - cluster.name=docker-cluster
      - cluster.routing.allocation.disk.threshold_enabled=false
      - discovery.type=single-node
      - http.max_content_length=10mb
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata01:/usr/share/elasticsearch/data
    healthcheck:
      interval: 20s
      retries: 10
      test: curl -s http://localhost:9200/_cluster/health | grep -vq '"status":"red"'

  mailcatcher:
    restart: on-failure:10
    image: dockage/mailcatcher:0.7.1
    ports:
    - "1080:1080"

  memcached:
    image: memcached
    restart: always

  rabbitmq:
    image: 'rabbitmq:3.6-management-alpine'
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      AMQP_URL: 'amqp://localhost?connection_attempts=5&retry_delay=5'
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"

  redis:
    image: 'redis:6.2'
    ports:
      - '6379:6379'

  clamav:
    image: 'mkodockx/docker-clamav:1.0.3-alpine'
    environment:
      CLAMD_CONF_FILE: /mnt/clamd.conf
    volumes:
      - ./docker/clamd.conf:/mnt/clamd.conf

volumes:
  frontend-build:
  shared-tmp:
  postgres_data:
  esdata01:
    driver: local