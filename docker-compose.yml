version: '3'

services:
  nginx:
    image: nginx:alpine
    ports:
      - "8000:80"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - api
      - frontend
  api:
    build: .
    restart: on-failure
    env_file:
      - ./.env
    stdin_open: true
    tty: true
    command: ["/start-dev.sh"]
    volumes:
      - .:/app
    depends_on:
      - db
  frontend:
    image: registry.gitlab.com/pleio/frontend:B2-latest
    restart: on-failure
    ports:
      - "9000:80"
  db:
    image: postgres
    env_file:
      - ./.env
    volumes:
      - postgres_data:/var/lib/postgresql/data/
  storage:
    image: morrisjobke/docker-swift-onlyone
    ports:
     - "12345:8080"
    volumes:
      - storage_data:/srv
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.1
    environment:
      - cluster.name=docker-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    volumes:
      - esdata01:/usr/share/elasticsearch/data
  kibana:
    image: docker.elastic.co/kibana/kibana:7.4.1
    ports: ['5601:5601']
    depends_on: ['elasticsearch']
    healthcheck:
      test: curl --cacert /usr/share/elasticsearch/config/certs/ca/ca.crt -s https://localhost:5601 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5
  apm-server:
    image: docker.elastic.co/apm/apm-server:7.5.0
    environment:
      - KIBANA_HOST=kibana
      - KIBANA_PORT=5601

    ports: ['8200:8200']
    command: --strict.perms=false -e  # -e flag to log to stderr and disable syslog/file output
    depends_on: ['elasticsearch', 'kibana']


volumes:
  postgres_data:
  storage_data:
  esdata01:
    driver: local