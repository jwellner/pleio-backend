# Generated by Django 3.2.6 on 2021-10-27 16:48

from django.db import migrations, models


def get_with_accessid(menu_item):
    children = [get_with_accessid(child) for child in menu_item["children"]]
    access_id = 2 # public access by default

    return {"link": menu_item["link"], "title": menu_item["title"], "children": children, "accessId": access_id}

def get_without_accessid(menu_item):
    children = [get_without_accessid(child) for child in menu_item["children"]]

    return {"link": menu_item["link"], "title": menu_item["title"], "children": children}


def forward_add_accessid(apps, schema_editor):
    Setting = apps.get_model('core.Setting')
    try:
        menu_setting = Setting.objects.get(key="MENU")
        new_menu = [get_with_accessid(menu_item) for menu_item in menu_setting.value]
        menu_setting.value = new_menu
        menu_setting.save()
    except Setting.DoesNotExist:
        pass

def reverse_add_accessid(apps, schema_editor):
    Setting = apps.get_model('core.Setting')
    try:
        menu_setting = Setting.objects.get(key="MENU")
        new_menu = [get_without_accessid(menu_item) for menu_item in menu_setting.value]
        menu_setting.value = new_menu
        menu_setting.save()
    except Setting.DoesNotExist:
        pass


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0041_auto_20211027_1648'),
    ]

    operations = [
        migrations.RunPython(forward_add_accessid, reverse_add_accessid),
    ]
