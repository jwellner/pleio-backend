# Generated by Django 3.0.7 on 2020-07-14 14:34

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ElggAccessCollectionMembership',
            fields=[
                ('user_guid', models.BigIntegerField(primary_key=True, serialize=False)),
                ('access_collection_id', models.BigIntegerField()),
            ],
            options={
                'db_table': 'elgg_access_collection_membership',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ElggAccessCollections',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('owner_guid', models.BigIntegerField()),
                ('site_guid', models.BigIntegerField()),
            ],
            options={
                'db_table': 'elgg_access_collections',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ElggAnnotations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value_type', models.CharField(max_length=7)),
                ('owner_guid', models.BigIntegerField()),
                ('access_id', models.BigIntegerField()),
                ('time_created', models.BigIntegerField()),
                ('enabled', models.CharField(max_length=3)),
            ],
            options={
                'db_table': 'elgg_annotations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ElggApiUsers',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('site_guid', models.BigIntegerField(blank=True, null=True)),
                ('api_key', models.CharField(blank=True, max_length=40, null=True, unique=True)),
                ('secret', models.CharField(max_length=40)),
                ('active', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'elgg_api_users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ElggBackup',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('transaction_id', models.CharField(max_length=36)),
                ('site_guid', models.BigIntegerField()),
                ('time_created', models.BigIntegerField()),
                ('performed_by', models.BigIntegerField()),
                ('type', models.CharField(max_length=50)),
                ('data', models.TextField()),
            ],
            options={
                'db_table': 'elgg_backup',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ElggConfig',
            fields=[
                ('name', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('value', models.TextField()),
                ('site_guid', models.BigIntegerField()),
            ],
            options={
                'db_table': 'elgg_config',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ElggDatalists',
            fields=[
                ('name', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('value', models.TextField()),
            ],
            options={
                'db_table': 'elgg_datalists',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ElggEntities',
            fields=[
                ('guid', models.BigAutoField(primary_key=True, serialize=False, unique=True)),
                ('type', models.CharField(max_length=6)),
                ('owner_guid', models.BigIntegerField()),
                ('site_guid', models.BigIntegerField()),
                ('container_guid', models.BigIntegerField()),
                ('access_id', models.BigIntegerField()),
                ('time_created', models.BigIntegerField()),
                ('time_updated', models.BigIntegerField()),
                ('last_action', models.BigIntegerField()),
                ('enabled', models.CharField(max_length=3)),
            ],
            options={
                'db_table': 'elgg_entities',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ElggEntityRelationships',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('relationship', models.CharField(max_length=50)),
                ('time_created', models.BigIntegerField()),
            ],
            options={
                'db_table': 'elgg_entity_relationships',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ElggEntitySubtypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=6)),
                ('subtype', models.CharField(max_length=50)),
                ('class_field', models.CharField(db_column='class', max_length=50)),
            ],
            options={
                'db_table': 'elgg_entity_subtypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ElggEntityViews',
            fields=[
                ('guid', models.BigAutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=6)),
                ('subtype', models.IntegerField(blank=True, null=True)),
                ('container_guid', models.BigIntegerField()),
                ('site_guid', models.BigIntegerField()),
                ('views', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'elgg_entity_views',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ElggEntityViewsLog',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('entity_guid', models.BigIntegerField()),
                ('type', models.CharField(max_length=6)),
                ('subtype', models.IntegerField(blank=True, null=True)),
                ('container_guid', models.BigIntegerField()),
                ('site_guid', models.BigIntegerField()),
                ('performed_by_guid', models.BigIntegerField()),
                ('time_created', models.IntegerField()),
            ],
            options={
                'db_table': 'elgg_entity_views_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ElggGeocodeCache',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('location', models.CharField(blank=True, max_length=128, null=True, unique=True)),
                ('lat', models.CharField(blank=True, max_length=20, null=True)),
                ('long', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'elgg_geocode_cache',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ElggHmacCache',
            fields=[
                ('hmac', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('ts', models.BigIntegerField()),
            ],
            options={
                'db_table': 'elgg_hmac_cache',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ElggMetadata',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value_type', models.CharField(max_length=7)),
                ('owner_guid', models.BigIntegerField()),
                ('site_guid', models.BigIntegerField(blank=True, null=True)),
                ('access_id', models.BigIntegerField()),
                ('time_created', models.BigIntegerField()),
                ('enabled', models.CharField(max_length=3)),
            ],
            options={
                'db_table': 'elgg_metadata',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ElggMetastrings',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('string', models.TextField()),
            ],
            options={
                'db_table': 'elgg_metastrings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ElggNotifications',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user_guid', models.BigIntegerField()),
                ('action', models.CharField(blank=True, max_length=60, null=True)),
                ('performer_guid', models.BigIntegerField()),
                ('entity_guid', models.BigIntegerField()),
                ('container_guid', models.BigIntegerField()),
                ('unread', models.CharField(blank=True, max_length=3, null=True)),
                ('site_guid', models.BigIntegerField()),
                ('time_created', models.IntegerField()),
            ],
            options={
                'db_table': 'elgg_notifications',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ElggPrivateSettings',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128)),
                ('value', models.TextField()),
            ],
            options={
                'db_table': 'elgg_private_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ElggPushNotificationsCount',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user_guid', models.BigIntegerField()),
                ('site_guid', models.BigIntegerField()),
                ('container_guid', models.BigIntegerField()),
                ('count', models.BigIntegerField()),
            ],
            options={
                'db_table': 'elgg_push_notifications_count',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ElggPushNotificationsSubscriptions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user_guid', models.BigIntegerField()),
                ('client_id', models.CharField(max_length=100)),
                ('service', models.CharField(max_length=4)),
                ('device_id', models.CharField(max_length=100)),
                ('token', models.CharField(max_length=512)),
            ],
            options={
                'db_table': 'elgg_push_notifications_subscriptions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ElggRiver',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=8)),
                ('subtype', models.CharField(max_length=32)),
                ('action_type', models.CharField(max_length=32)),
                ('site_guid', models.BigIntegerField()),
                ('access_id', models.BigIntegerField()),
                ('view', models.TextField()),
                ('subject_guid', models.BigIntegerField()),
                ('object_guid', models.BigIntegerField()),
                ('annotation_id', models.BigIntegerField()),
                ('posted', models.BigIntegerField()),
            ],
            options={
                'db_table': 'elgg_river',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ElggSystemLog',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('object_id', models.BigIntegerField()),
                ('object_class', models.CharField(max_length=50)),
                ('object_type', models.CharField(max_length=50)),
                ('object_subtype', models.CharField(max_length=50)),
                ('event', models.CharField(max_length=50)),
                ('performed_by_guid', models.BigIntegerField()),
                ('owner_guid', models.BigIntegerField()),
                ('site_guid', models.BigIntegerField(blank=True, null=True)),
                ('access_id', models.BigIntegerField()),
                ('enabled', models.CharField(max_length=3)),
                ('time_created', models.BigIntegerField()),
                ('ip_address', models.CharField(max_length=46)),
            ],
            options={
                'db_table': 'elgg_system_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ElggUsersApisessions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user_guid', models.BigIntegerField()),
                ('site_guid', models.BigIntegerField()),
                ('token', models.CharField(blank=True, max_length=40, null=True)),
                ('expires', models.BigIntegerField()),
            ],
            options={
                'db_table': 'elgg_users_apisessions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ElggUsersSessions',
            fields=[
                ('session', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('ts', models.BigIntegerField()),
                ('data', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'elgg_users_sessions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Instances',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('username', models.CharField(blank=True, max_length=255, null=True)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
                ('enabled', models.IntegerField(blank=True, null=True)),
                ('env', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'instances',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OauthAccessTokens',
            fields=[
                ('access_token', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('client_id', models.CharField(max_length=80)),
                ('user_id', models.CharField(blank=True, max_length=255, null=True)),
                ('expires', models.DateTimeField()),
                ('scope', models.CharField(blank=True, max_length=2000, null=True)),
            ],
            options={
                'db_table': 'oauth_access_tokens',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OauthAuthorizationCodes',
            fields=[
                ('authorization_code', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('client_id', models.CharField(max_length=80)),
                ('user_id', models.CharField(blank=True, max_length=255, null=True)),
                ('redirect_uri', models.CharField(blank=True, max_length=2000, null=True)),
                ('expires', models.DateTimeField()),
                ('scope', models.CharField(blank=True, max_length=2000, null=True)),
            ],
            options={
                'db_table': 'oauth_authorization_codes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OauthClients',
            fields=[
                ('client_id', models.CharField(max_length=80, primary_key=True, serialize=False)),
                ('client_secret', models.CharField(blank=True, max_length=80, null=True)),
                ('redirect_uri', models.CharField(max_length=2000)),
                ('grant_types', models.CharField(blank=True, max_length=80, null=True)),
                ('scope', models.CharField(blank=True, max_length=100, null=True)),
                ('user_id', models.CharField(blank=True, max_length=80, null=True)),
                ('gcm_key', models.CharField(blank=True, max_length=100, null=True)),
                ('apns_cert', models.TextField(blank=True, null=True)),
                ('wns_key', models.CharField(blank=True, max_length=100, null=True)),
                ('wns_secret', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'oauth_clients',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OauthJwt',
            fields=[
                ('client_id', models.CharField(max_length=80, primary_key=True, serialize=False)),
                ('subject', models.CharField(blank=True, max_length=80, null=True)),
                ('public_key', models.CharField(blank=True, max_length=2000, null=True)),
            ],
            options={
                'db_table': 'oauth_jwt',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OauthRefreshTokens',
            fields=[
                ('refresh_token', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('client_id', models.CharField(max_length=80)),
                ('user_id', models.CharField(blank=True, max_length=255, null=True)),
                ('expires', models.DateTimeField()),
                ('scope', models.CharField(blank=True, max_length=2000, null=True)),
            ],
            options={
                'db_table': 'oauth_refresh_tokens',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OauthScopes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scope', models.TextField(blank=True, null=True)),
                ('is_default', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'oauth_scopes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OauthUsers',
            fields=[
                ('username', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('password', models.CharField(blank=True, max_length=2000, null=True)),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'oauth_users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PleioRequestAccess',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('guid', models.BigIntegerField(unique=True)),
                ('user', models.TextField(blank=True, null=True)),
                ('time_created', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pleio_request_access',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProfileSyncApiLog',
            fields=[
                ('uuid', models.CharField(max_length=36, primary_key=True, serialize=False)),
                ('content', models.TextField(blank=True, null=True)),
                ('time_created', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'profile_sync_api_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GuidMap',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('guid', models.UUIDField(unique=True)),
                ('object_type', models.CharField(max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='ElggGroupsEntity',
            fields=[
                ('entity', models.OneToOneField(db_column='guid', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='elgg.ElggEntities')),
                ('name', models.TextField()),
                ('description', models.TextField()),
            ],
            options={
                'db_table': 'elgg_groups_entity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ElggObjectsEntity',
            fields=[
                ('entity', models.OneToOneField(db_column='guid', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='elgg.ElggEntities')),
                ('title', models.TextField()),
                ('description', models.TextField()),
            ],
            options={
                'db_table': 'elgg_objects_entity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ElggSitesEntity',
            fields=[
                ('name', models.TextField()),
                ('description', models.TextField()),
                ('url', models.CharField(max_length=255, unique=True)),
                ('entity', models.OneToOneField(db_column='guid', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='elgg.ElggEntities')),
            ],
            options={
                'db_table': 'elgg_sites_entity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ElggUsersEntity',
            fields=[
                ('entity', models.OneToOneField(db_column='guid', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='elgg.ElggEntities')),
                ('name', models.TextField()),
                ('username', models.CharField(max_length=128, unique=True)),
                ('password', models.CharField(max_length=32)),
                ('salt', models.CharField(max_length=12)),
                ('password_hash', models.CharField(max_length=256)),
                ('email', models.TextField()),
                ('language', models.CharField(max_length=6)),
                ('code', models.CharField(max_length=32)),
                ('banned', models.CharField(max_length=3)),
                ('admin', models.CharField(max_length=3)),
                ('last_action', models.BigIntegerField()),
                ('prev_last_action', models.BigIntegerField()),
                ('last_login', models.BigIntegerField()),
                ('prev_last_login', models.BigIntegerField()),
                ('pleio_guid', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'elgg_users_entity',
                'managed': False,
            },
        ),
    ]
